Class 1 - Cucumber Live -

to get proper reporting, I need cucumber
to reuse  the code and save time for scripting,
execute code the piece of code, which we want.
easily readable test cases in cucumber

maven -
pom.xml file - it is the backbone of our maven project
src - under this, we have main and test folder
main - where we write the code to develop the application
test - where we write the code to test the application

under test -
java - for all java stuff
resources - for all non java stuff

----------------------------------------------------------------
user story  - Login functionality

user story - search employee

Search employee by id
Search employee by name

rules of background -
till the time flow is not broken in all the scenarios of one feature file,  we can keep steps under background
background is applicable for only one feature file, it means for every feature file, background will be different
background will be executed before every single scenario of that feature file


hooks - we keep pre conditions and post conditions for the whole project for all scenarios in it
hooks must be placed under steps package

Order of execution
hooks -> background -> scenario -> hooks

first - we added employee using hard coded data
then - we added employee using parameter
-- as per the standards of framework, I need to achieve data driven testing
-- my one test case should execute against multiple sets of data
to achieve this, we implement examples table
--to save more time, we use data table

rules - for examples table -
background executes multiple times
hooks executes multiple times

rules - for data table -
background executes one times
hooks executes one times



page object model design pattern - it allows us to create classes as per the page of the app
in page class, we keep all the locators belong to that page/screen

Assert.asserttrue
Assert.assertequals

artifacts - reports


Rest assured -
to automate API's, we need a tool, i.e rest assured

given - pre-condition - preparing the request
when - taking action - perform the action/hitting the endpoint
then - expected result - verifying the results

3 point formula -
prepare the request - given
send the request - when
get/validate the response - then

